package net.entityCatPig.testmod;

import net.entityCatPig.testmod.client.model.*;
import net.entityCatPig.testmod.client.renderer.*;
import net.fabricmc.api.ClientModInitializer;
import net.fabricmc.api.EnvType;
import net.fabricmc.api.Environment;
import net.fabricmc.fabric.api.client.rendering.v1.EntityModelLayerRegistry;
import net.fabricmc.fabric.api.client.rendering.v1.EntityRendererRegistry;

import static net.entityCatPig.testmod.init.ModEntityTypes.*;
import static net.minecraft.entity.EntityType.*;

@Environment(EnvType.CLIENT)
public class TestModClient implements ClientModInitializer{

    @Override
    public void onInitializeClient() {
        EntityRendererRegistry.register(ZOMBIE,(context) -> {return new CPTMZombieRenderer(context);});
        EntityModelLayerRegistry.registerModelLayer(MODEL_ZOMBIE_LAYER, CPTMZombieModel::getTexturedModelData);
        EntityModelLayerRegistry.registerModelLayer(MODEL_ZOMBIE_LAYER_IA, CPTMZombieModel::getTexturedModelDataIA);
        EntityModelLayerRegistry.registerModelLayer(MODEL_ZOMBIE_LAYER_OA, CPTMZombieModel::getTexturedModelDataOA);
        EntityRendererRegistry.register(SKELETON,(context) -> {return new CPTMSkeletonRenderer(context);});
        EntityModelLayerRegistry.registerModelLayer(MODEL_SKELETON_LAYER, CPTMSkeletonModel::getTexturedModelData);
        EntityModelLayerRegistry.registerModelLayer(MODEL_SKELETON_LAYER_IA, CPTMSkeletonModel::getTexturedModelDataIA);
        EntityModelLayerRegistry.registerModelLayer(MODEL_SKELETON_LAYER_OA, CPTMSkeletonModel::getTexturedModelDataOA);
        EntityRendererRegistry.register(WITHER_SKELETON,(context) -> {return new CPTMWitherSkeletonRenderer(context);});
        EntityModelLayerRegistry.registerModelLayer(MODEL_WITHER_SKELETON_LAYER, CPTMWitherSkeletonModel::getTexturedModelData);
        EntityModelLayerRegistry.registerModelLayer(MODEL_WITHER_SKELETON_LAYER_IA, CPTMWitherSkeletonModel::getTexturedModelDataIA);
        EntityModelLayerRegistry.registerModelLayer(MODEL_WITHER_SKELETON_LAYER_OA, CPTMWitherSkeletonModel::getTexturedModelDataOA);
        EntityRendererRegistry.register(STRAY,(context) -> {return new CPTMStrayRenderer(context);});
        EntityModelLayerRegistry.registerModelLayer(MODEL_STRAY_LAYER, CPTMStrayModel::getTexturedModelData);
        EntityModelLayerRegistry.registerModelLayer(MODEL_STRAY_LAYER_IA, CPTMStrayModel::getTexturedModelDataIA);
        EntityModelLayerRegistry.registerModelLayer(MODEL_STRAY_LAYER_OA, CPTMStrayModel::getTexturedModelDataOA);
        EntityRendererRegistry.register(HUSK,(context) -> {return new CPTMHuskRenderer(context);});
        EntityModelLayerRegistry.registerModelLayer(MODEL_HUSK_LAYER, CPTMHuskModel::getTexturedModelData);
        EntityModelLayerRegistry.registerModelLayer(MODEL_HUSK_LAYER_IA, CPTMHuskModel::getTexturedModelDataIA);
        EntityModelLayerRegistry.registerModelLayer(MODEL_HUSK_LAYER_OA, CPTMHuskModel::getTexturedModelDataOA);
        EntityRendererRegistry.register(DROWNED,(context) -> {return new CPTMDrownedRenderer(context);});
        EntityModelLayerRegistry.registerModelLayer(MODEL_DROWNED_LAYER, CPTMDrownedModel::getTexturedModelData);
        EntityModelLayerRegistry.registerModelLayer(MODEL_DROWNED_LAYER_IA, CPTMDrownedModel::getTexturedModelDataIA);
        EntityModelLayerRegistry.registerModelLayer(MODEL_DROWNED_LAYER_OA, CPTMDrownedModel::getTexturedModelDataOA);
        EntityRendererRegistry.register(PIGLIN,(context) -> {return new CPTMPiglinRenderer(context);});
        EntityModelLayerRegistry.registerModelLayer(MODEL_PIGLIN_LAYER, CPTMPiglinModel::getTexturedModelData);
        EntityModelLayerRegistry.registerModelLayer(MODEL_PIGLIN_LAYER_IA, CPTMPiglinModel::getTexturedModelDataIA);
        EntityModelLayerRegistry.registerModelLayer(MODEL_PIGLIN_LAYER_OA, CPTMPiglinModel::getTexturedModelDataOA);
        EntityRendererRegistry.register(PIGLIN_BRUTE,(context) -> {return new CPTMPiglinBruteRenderer(context);});
        EntityModelLayerRegistry.registerModelLayer(MODEL_PIGLIN_BRUTE_LAYER, CPTMPiglinBruteModel::getTexturedModelData);
        EntityModelLayerRegistry.registerModelLayer(MODEL_PIGLIN_BRUTE_LAYER_IA, CPTMPiglinBruteModel::getTexturedModelDataIA);
        EntityModelLayerRegistry.registerModelLayer(MODEL_PIGLIN_BRUTE_LAYER_OA, CPTMPiglinBruteModel::getTexturedModelDataOA);
        EntityRendererRegistry.register(PILLAGER,(context) -> {return new CPTMPillagerRenderer(context);});
        EntityModelLayerRegistry.registerModelLayer(MODEL_PILLAGER_LAYER, CPTMPillagerModel::getTexturedModelData);
        EntityModelLayerRegistry.registerModelLayer(MODEL_PILLAGER_LAYER_IA, CPTMPillagerModel::getTexturedModelDataIA);
        EntityModelLayerRegistry.registerModelLayer(MODEL_PILLAGER_LAYER_OA, CPTMPillagerModel::getTexturedModelDataOA);
        EntityRendererRegistry.register(VINDICATOR,(context) -> {return new CPTMVindicatorRenderer(context);});
        EntityModelLayerRegistry.registerModelLayer(MODEL_VINDICATOR_LAYER, CPTMVindicatorModel::getTexturedModelData);
        EntityModelLayerRegistry.registerModelLayer(MODEL_VINDICATOR_LAYER_IA, CPTMVindicatorModel::getTexturedModelDataIA);
        EntityModelLayerRegistry.registerModelLayer(MODEL_VINDICATOR_LAYER_OA, CPTMVindicatorModel::getTexturedModelDataOA);
        EntityRendererRegistry.register(EVOKER,(context) -> {return new CPTMEvokerRenderer(context);});
        EntityModelLayerRegistry.registerModelLayer(MODEL_EVOKER_LAYER, CPTMEvokerModel::getTexturedModelData);
        EntityModelLayerRegistry.registerModelLayer(MODEL_EVOKER_LAYER_IA, CPTMEvokerModel::getTexturedModelDataIA);
        EntityModelLayerRegistry.registerModelLayer(MODEL_EVOKER_LAYER_OA, CPTMEvokerModel::getTexturedModelDataOA);
        EntityRendererRegistry.register(CAT,(context) -> {return new CPTMCatRenderer(context);});
        EntityModelLayerRegistry.registerModelLayer(MODEL_CAT_LAYER, CPTMCatModel::getTexturedModelData);
        EntityModelLayerRegistry.registerModelLayer(MODEL_CAT_LAYER_IA, CPTMCatModel::getTexturedModelDataIA);
        EntityModelLayerRegistry.registerModelLayer(MODEL_CAT_LAYER_OA, CPTMCatModel::getTexturedModelDataOA);
        EntityModelLayerRegistry.registerModelLayer(MODEL_CAT_LAYER_COLLAR, CPTMCatModel::getTexturedModelDataCatCollar);
        EntityRendererRegistry.register(ZOMBIFIED_PIGLIN,(context) -> {return new CPTMZombiefiedPiglinRenderer(context);});
        EntityModelLayerRegistry.registerModelLayer(MODEL_ZOMBIFIED_PIGLIN_LAYER, CPTMZombiefiedPiglinModel::getTexturedModelData);
        EntityModelLayerRegistry.registerModelLayer(MODEL_ZOMBIFIED_PIGLIN_LAYER_IA, CPTMZombiefiedPiglinModel::getTexturedModelDataIA);
        EntityModelLayerRegistry.registerModelLayer(MODEL_ZOMBIFIED_PIGLIN_LAYER_OA, CPTMZombiefiedPiglinModel::getTexturedModelDataOA);
        EntityRendererRegistry.register(ENDERMITE,(context) -> {return new CPTMEndermiteRenderer(context);});
        EntityModelLayerRegistry.registerModelLayer(MODEL_ENDERMITE_LAYER, CPTMEndermiteModel::getTexturedModelData);
        //EntityModelLayerRegistry.registerModelLayer(MODEL_ENDERMITE_LAYER_IA, CPTMEndermiteModel::getTexturedModelDataIA);
        //EntityModelLayerRegistry.registerModelLayer(MODEL_ENDERMITE_LAYER_OA, CPTMEndermiteModel::getTexturedModelDataOA);
        EntityRendererRegistry.register(SILVERFISH,(context) -> {return new CPTMSilverfishRenderer(context);});
        EntityModelLayerRegistry.registerModelLayer(MODEL_SILVERFISH_LAYER, CPTMSilverfishModel::getTexturedModelData);
        //EntityModelLayerRegistry.registerModelLayer(MODEL_SILVERFISH_LAYER_IA, CPTMSilverfishModel::getTexturedModelDataIA);
        //EntityModelLayerRegistry.registerModelLayer(MODEL_SILVERFISH_LAYER_OA, CPTMSilverfishModel::getTexturedModelDataOA);
        EntityRendererRegistry.register(SNOW_GOLEM,(context) -> {return new CPTMSnowGolemRenderer(context);});
        EntityModelLayerRegistry.registerModelLayer(MODEL_SNOW_GOLEM_LAYER, CPTMSnowGolemModel::getTexturedModelData);
        EntityModelLayerRegistry.registerModelLayer(MODEL_SNOW_GOLEM_LAYER_IA, CPTMSnowGolemModel::getTexturedModelDataIA);
        EntityModelLayerRegistry.registerModelLayer(MODEL_SNOW_GOLEM_LAYER_OA, CPTMSnowGolemModel::getTexturedModelDataOA);
        EntityRendererRegistry.register(IRON_GOLEM,(context) -> {return new CPTMIronGolemRenderer(context);});
        EntityModelLayerRegistry.registerModelLayer(MODEL_IRON_GOLEM_LAYER, CPTMIronGolemModel::getTexturedModelData);
        EntityModelLayerRegistry.registerModelLayer(MODEL_IRON_GOLEM_LAYER_IA, CPTMIronGolemModel::getTexturedModelDataIA);
        EntityModelLayerRegistry.registerModelLayer(MODEL_IRON_GOLEM_LAYER_OA, CPTMIronGolemModel::getTexturedModelDataOA);
        EntityRendererRegistry.register(WANDERING_TRADER,(context) -> {return new CPTMWanderingTraderRenderer(context);});
        EntityModelLayerRegistry.registerModelLayer(MODEL_WANDERING_TRADER_LAYER, CPTMWanderingTraderModel::getTexturedModelData);
        EntityModelLayerRegistry.registerModelLayer(MODEL_WANDERING_TRADER_LAYER_IA, CPTMWanderingTraderModel::getTexturedModelDataIA);
        EntityModelLayerRegistry.registerModelLayer(MODEL_WANDERING_TRADER_LAYER_OA, CPTMWanderingTraderModel::getTexturedModelDataOA);
        EntityRendererRegistry.register(VILLAGER,(context) -> {return new CPTMVillagerRenderer(context);});
        EntityModelLayerRegistry.registerModelLayer(MODEL_VILLAGER_LAYER, CPTMVillagerModel::getTexturedModelData);
        EntityModelLayerRegistry.registerModelLayer(MODEL_VILLAGER_LAYER_IA, CPTMVillagerModel::getTexturedModelDataIA);
        EntityModelLayerRegistry.registerModelLayer(MODEL_VILLAGER_LAYER_OA, CPTMVillagerModel::getTexturedModelDataOA);
        EntityRendererRegistry.register(ZOMBIE_VILLAGER,(context) -> {return new CPTMZombieVillagerRenderer(context);});
        EntityModelLayerRegistry.registerModelLayer(MODEL_ZOMBIE_VILLAGER_LAYER, CPTMZombieVillagerModel::getTexturedModelData);
        EntityModelLayerRegistry.registerModelLayer(MODEL_ZOMBIE_VILLAGER_LAYER_IA, CPTMZombieVillagerModel::getTexturedModelDataIA);
        EntityModelLayerRegistry.registerModelLayer(MODEL_ZOMBIE_VILLAGER_LAYER_OA, CPTMZombieVillagerModel::getTexturedModelDataOA);
        EntityRendererRegistry.register(ILLUSIONER,(context) -> {return new CPTMIllusionerRenderer(context);});
        EntityModelLayerRegistry.registerModelLayer(MODEL_ILLUSIONER_LAYER, CPTMIllusionerModel::getTexturedModelData);
        EntityModelLayerRegistry.registerModelLayer(MODEL_ILLUSIONER_LAYER_IA, CPTMIllusionerModel::getTexturedModelDataIA);
        EntityModelLayerRegistry.registerModelLayer(MODEL_ILLUSIONER_LAYER_OA, CPTMIllusionerModel::getTexturedModelDataOA);
        EntityRendererRegistry.register(VEX,(context) -> {return new CPTMVexRenderer(context);});
        EntityModelLayerRegistry.registerModelLayer(MODEL_VEX_LAYER, CPTMVexModel::getTexturedModelData);
        //EntityModelLayerRegistry.registerModelLayer(MODEL_VEX_LAYER_IA, CPTMVexModel::getTexturedModelDataIA);
        //EntityModelLayerRegistry.registerModelLayer(MODEL_VEX_LAYER_OA, CPTMVexModel::getTexturedModelDataOA);
        EntityRendererRegistry.register(BLAZE,(context) -> {return new CPTMBlazeRenderer(context);});
        EntityModelLayerRegistry.registerModelLayer(MODEL_BLAZE_LAYER, CPTMBlazeModel::getTexturedModelData);
        //EntityModelLayerRegistry.registerModelLayer(MODEL_BLAZE_LAYER_IA, CPTMBlazeModel::getTexturedModelDataIA);
        //EntityModelLayerRegistry.registerModelLayer(MODEL_BLAZE_LAYER_OA, CPTMBlazeModel::getTexturedModelDataOA);
        EntityRendererRegistry.register(GHAST,(context) -> {return new CPTMGhastRenderer(context);});
        EntityModelLayerRegistry.registerModelLayer(MODEL_GHAST_LAYER, CPTMGhastModel::getTexturedModelData);
        //EntityModelLayerRegistry.registerModelLayer(MODEL_GHAST_LAYER_IA, CPTMGhastModel::getTexturedModelDataIA);
        //EntityModelLayerRegistry.registerModelLayer(MODEL_GHAST_LAYER_OA, CPTMGhastModel::getTexturedModelDataOA);
        EntityRendererRegistry.register(WITHER,(context) -> {return new CPTMWitherRenderer(context);});
        EntityModelLayerRegistry.registerModelLayer(MODEL_WITHER_LAYER, CPTMWitherModel::getTexturedModelData);
        EntityModelLayerRegistry.registerModelLayer(MODEL_WITHER_LAYER_ARMOR, CPTMWitherModel::getTexturedModelDataArmor);
        //EntityModelLayerRegistry.registerModelLayer(MODEL_WITHER_LAYER_IA, CPTMWitherModel::getTexturedModelDataIA);
        //EntityModelLayerRegistry.registerModelLayer(MODEL_WITHER_LAYER_OA, CPTMWitherModel::getTexturedModelDataOA);
        EntityRendererRegistry.register(CREEPER,(context) -> {return new CPTMCreeperRenderer(context);});
        EntityModelLayerRegistry.registerModelLayer(MODEL_CREEPER_LAYER, CPTMCreeperModel::getTexturedModelData);
        EntityModelLayerRegistry.registerModelLayer(MODEL_CREEPER_LAYER_IA, CPTMCreeperModel::getTexturedModelDataIA);
        EntityModelLayerRegistry.registerModelLayer(MODEL_CREEPER_LAYER_OA, CPTMCreeperModel::getTexturedModelDataOA);
        EntityModelLayerRegistry.registerModelLayer(MODEL_CREEPER_LAYER_ARMOR, CPTMCreeperModel::getTexturedModelDataArmor);
        EntityRendererRegistry.register(SLIME,(context) -> {return new CPTMSlimeRenderer(context);});
        EntityModelLayerRegistry.registerModelLayer(MODEL_SLIME_LAYER, CPTMSlimeModel::getTexturedModelData);
        EntityModelLayerRegistry.registerModelLayer(MODEL_SLIME_LAYER_IA, CPTMSlimeModel::getTexturedModelDataIA);
        EntityModelLayerRegistry.registerModelLayer(MODEL_SLIME_LAYER_OA, CPTMSlimeModel::getTexturedModelDataOA);
        EntityRendererRegistry.register(MAGMA_CUBE,(context) -> {return new CPTMMagmaCubeRenderer(context);});
        EntityModelLayerRegistry.registerModelLayer(MODEL_MAGMA_CUBE_LAYER, CPTMMagmaCubeModel::getTexturedModelData);
        EntityModelLayerRegistry.registerModelLayer(MODEL_MAGMA_CUBE_LAYER_IA, CPTMMagmaCubeModel::getTexturedModelDataIA);
        EntityModelLayerRegistry.registerModelLayer(MODEL_MAGMA_CUBE_LAYER_OA, CPTMMagmaCubeModel::getTexturedModelDataOA);
        EntityRendererRegistry.register(ENDERMAN,(context) -> {return new CPTMEndermanRenderer(context);});
        EntityModelLayerRegistry.registerModelLayer(MODEL_ENDERMAN_LAYER, CPTMEndermanModel::getTexturedModelData);
        EntityModelLayerRegistry.registerModelLayer(MODEL_ENDERMAN_LAYER_IA, CPTMEndermanModel::getTexturedModelDataIA);
        EntityModelLayerRegistry.registerModelLayer(MODEL_ENDERMAN_LAYER_OA, CPTMEndermanModel::getTexturedModelDataOA);
        EntityRendererRegistry.register(PHANTOM,(context) -> {return new CPTMPhantomRenderer(context);});
        EntityModelLayerRegistry.registerModelLayer(MODEL_PHANTOM_LAYER, CPTMPhantomModel::getTexturedModelData);
        //EntityModelLayerRegistry.registerModelLayer(MODEL_PHANTOM_LAYER_IA, CPTMPhantomModel::getTexturedModelDataIA);
        //EntityModelLayerRegistry.registerModelLayer(MODEL_PHANTOM_LAYER_OA, CPTMPhantomModel::getTexturedModelDataOA);
        EntityRendererRegistry.register(WITCH,(context) -> {return new CPTMWitchRenderer(context);});
        EntityModelLayerRegistry.registerModelLayer(MODEL_WITCH_LAYER, CPTMWitchModel::getTexturedModelData);
        EntityModelLayerRegistry.registerModelLayer(MODEL_WITCH_LAYER_IA, CPTMWitchModel::getTexturedModelDataIA);
        EntityModelLayerRegistry.registerModelLayer(MODEL_WITCH_LAYER_OA, CPTMWitchModel::getTexturedModelDataOA);
        EntityRendererRegistry.register(GUARDIAN,(context) -> {return new CPTMGuardianRenderer(context);});
        EntityModelLayerRegistry.registerModelLayer(MODEL_GUARDIAN_LAYER, CPTMGuardianModel::getTexturedModelData);
        EntityModelLayerRegistry.registerModelLayer(MODEL_GUARDIAN_LAYER_IA, CPTMGuardianModel::getTexturedModelDataIA);
        EntityModelLayerRegistry.registerModelLayer(MODEL_GUARDIAN_LAYER_OA, CPTMGuardianModel::getTexturedModelDataOA);
        EntityRendererRegistry.register(ELDER_GUARDIAN,(context) -> {return new CPTMElderGuardianRenderer(context);});
        EntityModelLayerRegistry.registerModelLayer(MODEL_ELDER_GUARDIAN_LAYER, CPTMElderGuardianModel::getTexturedModelData);
        EntityModelLayerRegistry.registerModelLayer(MODEL_ELDER_GUARDIAN_LAYER_IA, CPTMElderGuardianModel::getTexturedModelDataIA);
        EntityModelLayerRegistry.registerModelLayer(MODEL_ELDER_GUARDIAN_LAYER_OA, CPTMElderGuardianModel::getTexturedModelDataOA);
        EntityRendererRegistry.register(SPIDER,(context) -> {return new CPTMSpiderRenderer(context);});
        EntityModelLayerRegistry.registerModelLayer(MODEL_SPIDER_LAYER, CPTMSpiderModel::getTexturedModelData);
        //EntityModelLayerRegistry.registerModelLayer(MODEL_SPIDER_LAYER_IA, CPTMSpiderModel::getTexturedModelDataIA);
        //EntityModelLayerRegistry.registerModelLayer(MODEL_SPIDER_LAYER_OA, CPTMSpiderModel::getTexturedModelDataOA);
        EntityRendererRegistry.register(CAVE_SPIDER,(context) -> {return new CPTMCaveSpiderRenderer(context);});
        EntityModelLayerRegistry.registerModelLayer(MODEL_CAVE_SPIDER_LAYER, CPTMCaveSpiderModel::getTexturedModelData);
        //EntityModelLayerRegistry.registerModelLayer(MODEL_CAVE_SPIDER_LAYER_IA, CPTMCaveSpiderModel::getTexturedModelDataIA);
        //EntityModelLayerRegistry.registerModelLayer(MODEL_CAVE_SPIDER_LAYER_OA, CPTMCaveSpiderModel::getTexturedModelDataOA);

    }
}
